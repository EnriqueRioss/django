# Generated by Django 5.1.6 on 2025-06-03 17:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0003_remove_diagnosticopresuntivo_diagnostico_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='evaluaciongenetica',
            name='pareja',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.parejas'),
        ),
        migrations.AlterField(
            model_name='antecedentespersonales',
            name='controles_prenatales',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='evaluaciongenetica',
            name='proposito',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.propositos'),
        ),
        migrations.AddConstraint(
            model_name='evaluaciongenetica',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('pareja__isnull', True), ('proposito__isnull', False)), models.Q(('pareja__isnull', False), ('proposito__isnull', True)), _connector='OR'), name='check_evaluacion_proposito_or_pareja'),
        ),
        migrations.AddConstraint(
            model_name='evaluaciongenetica',
            constraint=models.UniqueConstraint(condition=models.Q(('proposito__isnull', False)), fields=('proposito',), name='unique_evaluacion_proposito'),
        ),
        migrations.AddConstraint(
            model_name='evaluaciongenetica',
            constraint=models.UniqueConstraint(condition=models.Q(('pareja__isnull', False)), fields=('pareja',), name='unique_evaluacion_pareja'),
        ),
        migrations.AddConstraint(
            model_name='informacionpadres',
            constraint=models.UniqueConstraint(fields=('proposito', 'tipo'), name='unique_tipo_por_proposito'),
        ),
        migrations.AddConstraint(
            model_name='informacionpadres',
            constraint=models.CheckConstraint(condition=models.Q(('tipo__in', ['Padre', 'Madre'])), name='tipo_valido'),
        ),
    ]
